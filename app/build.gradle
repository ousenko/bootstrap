apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../gradle/version.gradle'
apply from: '../gradle/artefact.gradle'

android {
    compileSdkVersion 28

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "app"

    defaultConfig {
        applicationId "agency.v3.bootstrap"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode gitBasedVersionCode
        versionName gitBasedVersionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }


    signingConfigs {

        //TODO: in real app these variables should not be left under source control; use ENV variable
        staging {
            storeFile file("../signing/staging.jks")
            storePassword "staging"
            keyAlias "staging"
            keyPassword "staging"
            v2SigningEnabled true
        }

        production {
            storeFile file("../signing/production.jks")
            storePassword "production"
            keyAlias "production"
            keyPassword "production"
            v2SigningEnabled true
        }


    }

    productFlavors {

        production {
            signingConfig signingConfigs.production
            dimension "app"

            buildConfigField "String", "BASE_URL", '"https://api.iextrading.com/"' //usually different for production
        }

        staging {
            applicationIdSuffix ".staging"
            signingConfig signingConfigs.staging
            dimension "app"

            buildConfigField "String", "BASE_URL", '"https://api.iextrading.com/"'

        }
    }
}

ext {
    supportVer = "28.0.0-rc01"
}

dependencies {

    //std
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


    // ui
    implementation "com.android.support:appcompat-v7:$supportVer"
    implementation "com.android.support:design:$supportVer"
    implementation "com.android.support:recyclerview-v7:$supportVer"
    implementation "com.android.support:design:$supportVer"
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'




    implementation 'com.bluelinelabs:conductor:2.1.5'
    implementation('com.bluelinelabs:conductor-support:2.1.5'){
        exclude group: "com.android.support", module: "support-media-compat"
        exclude group: "com.android.support", module: "support-v4"
    }
    implementation "com.jakewharton:butterknife:8.8.1"
    kapt "com.jakewharton:butterknife-compiler:8.8.1"


    //tools
    implementation('com.crashlytics.sdk.android:crashlytics:2.8.0@aar') {
        transitive = true;
    }
    stagingImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'
    productionImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    implementation "com.jakewharton.timber:timber:4.6.0"


    //crosscutting
    implementation 'com.google.dagger:dagger:2.16'
    kapt 'com.google.dagger:dagger-compiler:2.16'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.14'


    ///data
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation "com.squareup.retrofit2:adapter-rxjava2:2.3.0"
    implementation "com.squareup.okhttp3:okhttp:3.11.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.8.0"
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'


    //tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}
